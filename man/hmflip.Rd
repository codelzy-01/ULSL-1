% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmflip.R
\name{hmflip}
\alias{hmflip}
\title{Path-Flipping Step in the Hungarian Algorithm}
\usage{
hmflip(A, C, LC, LR, U, l, r)
}
\arguments{
\item{A}{A numeric matrix representing the current cost matrix,
where negative values are used as pointers for unassigned zeros.}

\item{C}{An integer vector indicating the current column-to-row assignment.}

\item{LC}{An integer vector storing the assigned row for each column.}

\item{LR}{An integer vector storing the assigned column for each row.}

\item{U}{An integer vector of unassigned rows, with U reserved as a placeholder.}

\item{l}{An integer representing the current column index in the flipping path.}

\item{r}{An integer representing the current row index in the flipping path.}
}
\value{
A list containing:
\describe{
\item{A}{The updated cost matrix after the flipping step.}
\item{C}{The updated column-to-row assignment vector.}
\item{U}{The updated unassigned row list.}
}
}
\description{
This function implements the path-flipping step used in a variant of
the Hungarian algorithm for optimal assignment problems.
Given a cost matrix and current assignment state, it updates the
assignment along a path to improve the overall matching.
}
