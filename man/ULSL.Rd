% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ULSL.R
\name{ULSL}
\alias{ULSL}
\title{Unified Latent and Similarity Learning  (ULSL)}
\usage{
ULSL(
  X,
  sss = 0.5,
  alpha0 = 2,
  beta = 0.1,
  d = 40,
  maxIters = 200,
  gt = NULL,
  c = NULL,
  custom_range = NULL
)
}
\arguments{
\item{X}{A list of numeric matrices, each representing a view of the data
(features Ã— samples).
Each matrix is expected to have the same number of columns (samples).}

\item{sss}{Numeric, regularization parameter controlling trade-off in objective function (default: 0.5).}

\item{alpha0}{Numeric, base regularization parameter for similarity alignment (default: 2).}

\item{beta}{Numeric, regularization parameter for Laplacian constraint (default: 0.1).}

\item{d}{Integer, latent dimension size (default: 40).}

\item{maxIters}{Integer, maximum number of optimization iterations (default: 200).}

\item{gt}{Optional numeric or factor vector, ground-truth cluster labels.
If provided, the function returns clustering performance measures.}

\item{c}{Optional integer, number of clusters.
If not provided, the algorithm automatically determines it.}

\item{custom_range}{Optional numeric vector of length 2 specifying candidate cluster range.
If NULL, it will be determined automatically based on sample size.}
}
\value{
If \code{gt} is provided:
\item{measures}{A list containing clustering evaluation metrics (Accuracy, NMI, Purity, etc.).}
Otherwise:
\item{cl}{A vector of cluster assignments.}
\item{Obj}{A numeric vector of objective function values across iterations.}
\item{Z}{The final learned similarity matrix.}
}
\description{
This function implements the ULSL algorithm, which integrates multiple
omics views (or data matrices) into a unified latent representation
and similarity graph, and performs clustering.
It uses an iterative optimization approach to jointly learn:
\itemize{
\item Projection matrix \( W \)
\item Latent representation matrix \( H \)
\item Similarity matrix \( Z \)
}
The final output includes cluster assignments and optionally clustering performance measures.
}
\details{
ULSL proceeds in the following steps:
\enumerate{
\item Normalize each view to ensure comparability.
\item Compute pairwise distances and affinity matrices for each view.
\item Fuse affinity matrices using the SNF (Similarity Network Fusion) algorithm.
\item Initialize latent representations \( W \) and \( H \).
\item Iteratively update \( W \), \( H \), and \( Z \) until convergence or reaching \code{maxIters}.
\item If the number of clusters \code{c} is not given:
\itemize{
\item Determine candidate cluster numbers (\code{NUMC}) from \code{custom_range} or automatically.
\item Select the optimal number of clusters using \code{nemo.num.clusters}.
}
\item Perform spectral clustering on \( Z \) to obtain cluster labels.
\item If \code{gt} is provided, compute clustering evaluation metrics.
}
}
