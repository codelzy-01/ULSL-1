% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmreduce.R
\name{hmreduce}
\alias{hmreduce}
\title{Reduction Step in the Hungarian Algorithm}
\usage{
hmreduce(A, CH, RH, LC, LR, SLC, SLR)
}
\arguments{
\item{A}{A numeric matrix representing the current cost matrix,
where negative values indicate pointers for unassigned zeros.}

\item{CH}{An integer vector representing the last assigned zero for each row.}

\item{RH}{An integer vector storing rows that need to be explored.}

\item{LC}{An integer vector representing the current column assignments.}

\item{LR}{An integer vector representing the current row assignments.}

\item{SLC}{An integer vector of columns to be scanned (covered columns list).}

\item{SLR}{An integer vector of rows to be scanned (covered rows list).}
}
\value{
A list containing:
\describe{
\item{A}{The updated cost matrix after the reduction step.}
\item{CH}{The updated list of last assigned zeros for each row.}
\item{RH}{The updated list of rows to be explored.}
}
}
\description{
This function implements the reduction step in a variant of the Hungarian algorithm
for optimal assignment problems. It adjusts the cost matrix by reducing uncovered
elements and adjusting covered elements, thereby creating new zeros
and enabling further assignments.
}
